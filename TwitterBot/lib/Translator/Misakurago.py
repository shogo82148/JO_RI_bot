#!/usr/bin/env python
# -*- coding:utf-8 -*-
"""
みさくら語翻訳をするライブラリ
http://jet-black-laver.sakura.ne.jp/RTM/nankotu.htm
で公開されているJavaScriptのPython移植
"""

import re

_rules = (
    (u'(気持|きも)ちいい', u'ぎも゛ぢい゛い゛ぃ'),
    (u'(大好|だいす)き', u'らいしゅきいぃっ'),
    (u'(ミルク|みるく|牛乳)', u'ちんぽミルク'),
    (u'お(願|ねが)い', u'お願いぃぃぃっっっﾞ'),
    (u'ぁ', u'ぁぁ゛ぁ゛'),
    (u'あ', u'ぁあああ あぉ'),
    (u'お', u'おﾞぉおォおん'),
    (u'ごきげんよう', u'ごきげんよぉおお！んおっ！んおおーーっ！ ', 1),
    (u'ごきげんよう', u'ごきげんみゃぁあ゛あ゛ぁ゛ぁぁあ！！'),
    (u'こん(にち|ばん)[はわ]', ur'こん\1みゃぁあ゛あ゛ぁ゛ぁぁあ！！'),
    (u'えて', u'てへぇええぇﾞ'),
    (u'する', u'するの'),
    (u'します', u'するの'),
    (u'精液', u'せーしっせーし でりゅぅ でちゃいましゅ みるく ちんぽみるく ふたなりみるく'),
    (u'射精', u'でちゃうっ れちゃうよぉおおﾞ'),
    (u'(馬鹿|バカ|ばか)', u'バカ！バカ！まんこ!!'),
    (u'いい', u'いぃぃっよぉおおﾞ'),
    (u'[好す]き', u'ちゅき'),
    (u'して', u'してぇぇぇぇ゛'),
    (u'行く', u'んはっ イっぐぅぅぅふうぅ'),
    (u'いく', u'イっくぅぅふぅん'),
    (u'イク', u'イッちゃううぅん'),
    (u'駄目', u'らめにゃのぉぉぉ゛'),
    (u'ダメ',  'んぉほぉぉォォ　らめぇ'),
    (u'だめ', u'らめぇぇ'),
    (u'ちゃん', u'ちゃぁん'),
    (u'(おい|美味)しい', ur'\1ひぃ…れしゅぅ'),
    (u'(た|る|ない)([。、　 ・…!?！？」\n\r\x00])', ur'\1の\2'),
    (u'さい([。、　 ・…!?！？」\n\r\x00])', ur'さいなの\1'),
    (u'よ([。、　 ・…!?！？」\n\r\x00])', ur'よお゛お゛お゛ぉ\1'),
    (u'もう', u'んもぉ゛お゛お゛ぉぉ'),
    (u'(い|入)れて', u'いれてえぇぇぇえ'),
    (u'(気持|きも)ちいい', u'きも゛ぢい゛～っ'),
    (u'(がんば|頑張)る', ur'尻穴ちんぽしごき\1るぅ!!!'),
    (u'出る', u'でちゃうっ れちゃうよぉおおﾞ'),
    (u'でる', u'でっ…でるぅでるうぅうぅ'),
    (u'です', u'れしゅぅぅぅ'),
    (u'ます', u'ましゅぅぅぅ'),
    (u'はい', u'はひぃ'),
    (u'スゴイ', u'スゴぉッ!!'),
    (u'(すご|凄)い', u'しゅごいのょぉぉぅ'),
    (u'だ', u'ら'),
    (u'さ', u'しゃ'),
    (u'な', u'にゃ'),
    (u'つ', u'ちゅ'),
    (u'ちゃ', u'ひゃ'),
    (u'じゃ', u'に゛ゃ'),
    (u'ほ', u'ほお゛お゛っ'),
    (u'で', u'れ'),
    (u'す', u'しゅ'),
    (u'ざ', u'じゃ'),
    (u'い', u'いぃ'),
    (u'の', u'のぉおお'),
    )

_re_rules = [(re.compile(args[0]), args) for args in _rules]

_re_misakura = re.compile(u'゛|[あぁ]{3,}|[いぃ]{3,}|[うぅ]{3,}|[えぇ]{3,}|[おぉォ]{3,}'
                          u'|ちんぽミルク|しゅごい|スゴぉッ|れしゅぅ|ふたなり|んおっ|でりゅぅ|まんこ|らめぇ')

class Misakurago(object):
    def translate(self, text):
        for rule, arg in _re_rules:
            repl = arg[1]
            count = 0
            if len(arg)>=3:
                count = arg[2]
            text = rule.sub(repl, text, count)
        return text

    def detect(self, text):
        return not _re_misakura.search(text) is None
